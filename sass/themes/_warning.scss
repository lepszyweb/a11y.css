@charset 'UTF-8';

/*doc
---
title: "# [href]"
name: a01-empty-href
category: Ostrzeżenia
---

##Opis
Atrybut `[href]` zawiera tylko `#`.
Prawdopodobnie powinien to być `<button>` lub przynajmniej `[role="button"]`. Nie sądzisz?


##Bibliografia
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L165>

##Selektor
```css_example
a[href="#"]:not([role="button"])
```

##Test
```html_example
<a href="#">O rany, ja nic nie znaczę.</a>
```
*/
a[href="#"]:not([role="button"]) {
  @include warning('empty-href');
}


/*doc
---
title: "abbr powinien mieć [title]"
name: a02-empty-title
category: Ostrzeżenia
---

##Opis
Każdy skrót powinien zawierać wyjaśnienie jego znaczenia, przynajmniej przy pierwszym wystąpieniu.

##Bibliografia
* BP160 OpQuast
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-9-4>
* <https://www.w3.org/TR/WCAG20/#meaning-located>
* <https://www.w3.org/TR/WCAG-TECHS/G70.html>
* <https://www.w3.org/TR/WCAG-TECHS/G97.html>
* <https://www.w3.org/TR/WCAG-TECHS/G102.html>
* <https://www.w3.org/TR/WCAG-TECHS/H28.html>

##Selektor
```css_example
abbr:not([title]),
abbr[title=" "],
abbr[title=""]
```

##Test
```html_example
<p>Co wiesz o <abbr>W3C</abbr>?</p>
```
*/
abbr:not([title]),
abbr[title=" "],
abbr[title=""] {
  @include warning('empty-title');
}


/*doc
---
title: "[alt] może być pusty, ale wymaga sprawdzenia"
name: a03-empty-alt
category: Ostrzeżenia
---

##Opis
Wartość `[alt]` może być pusta, jeśli obraz jest tylko dekoracyjny. W każdym innym przypadku tekst `[alt]` musi być zdefiniowany.Sprawdź to dwa razy.

##Bibliografia
* BP160 OpQuast
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-1-2>
* <https://www.accede-web.com/notices/html-css-javascript/6-images-icones/6-3-balise-img/>
* <https://www.w3.org/WAI/tutorials/images/decision-tree/>
* <https://www.w3.org/TR/html51/semantics.html#alt>
* <https://www.w3.org/TR/2008/REC-WCAG20-20081211/#text-equiv-all>
* <https://www.w3.org/TR/WCAG-TECHS/H67.html>
* <https://www.w3.org/TR/WCAG-TECHS/F39.html>
* <https://www.w3.org/TR/WCAG-TECHS/F38.html>

##Selektor
```css_example
img[alt=""],
area[alt=""],
input[type="image"][alt=""],
embed[type="image"][alt=""],
object[type="image"][alt=""]
```

##Test
```html_example
<img alt="" src="static/ffoodd.png" width="144" height="144" /><span>†</span>
```
*/
img[alt=""],
area[alt=""],
input[type="image"][alt=""] {
  @include warning('empty-alt', $self-closing: true);
}

embed[type="image"][alt=""],
object[type="image"][alt=""] {
  @include warning('empty-alt');
}


/*doc
---
title: "[alt] zawiera nazwę pliku"
name: a04-filename-alt
category: Ostrzeżenia
---

##Opis
Nazwa pliku w `[alt]` jest prawdopodobnie błędem automatyzacji… i nigdy nie pomoże żadnemu użytkownikowi.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-1-2>
* <https://www.accede-web.com/notices/html-css-javascript/6-images-icones/6-3-balise-img/>
* <https://www.w3.org/WAI/tutorials/images/decision-tree/>
* <https://www.w3.org/TR/html51/semantics.html#alt>
* <https://www.w3.org/TR/2008/REC-WCAG20-20081211/#text-equiv-all>
* <https://www.w3.org/TR/WCAG-TECHS/H67.html>
* <https://www.w3.org/TR/WCAG-TECHS/F39.html>
* <https://www.w3.org/TR/WCAG-TECHS/F38.html>

##Selektor
```css_example
img[alt$=".pdf"],
area[alt$=".pdf"],
input[type="image"][alt$=".pdf"],
img[alt$=".doc"],
area[alt$=".doc"],
input[type="image"][alt$=".doc"],
img[alt$=".png"],
area[alt$=".png"],
input[type="image"][alt$=".png"],
img[alt$=".jpg"],
area[alt$=".jpg"],
input[type="image"][alt$=".jpg"],
img[alt$=".gif"],
area[alt$=".gif"],
input[type="image"][alt$=".gif"],
img[alt$=".mp3"],
area[alt$=".mp3"],
input[type="image"][alt$=".mp3"],
img[alt$=".mp4"],
area[alt$=".mp4"],
input[type="image"][alt$=".mp4"],
img[alt$=".mov"],
area[alt$=".mov"],
input[type="image"][alt$=".mov"],
img[alt$=".ogg"],
area[alt$=".ogg"],
input[type="image"][alt$=".ogg"],
img[alt$=".xls"],
area[alt$=".xls"],
input[type="image"][alt$=".xls"],
img[alt$=".txt"],
area[alt$=".txt"],
input[type="image"][alt$=".txt"],
img[alt$=".zip"],
area[alt$=".zip"],
input[type="image"][alt$=".zip"],
img[alt$=".rar"],
area[alt$=".rar"],
input[type="image"][alt$=".rar"],
img[alt$=".docx"],
area[alt$=".docx"],
input[type="image"][alt$=".docx"],
img[alt$=".webp"],
area[alt$=".webp"],
input[type="image"][alt$=".webp"],
img[alt$=".apng"],
area[alt$=".apng"],
input[type="image"][alt$=".apng"],
img[alt$=".svg"],
area[alt$=".svg"],
input[type="image"][alt$=".svg"],
img[alt$=".svgz"],
area[alt$=".svgz"],
input[type="image"][alt$=".svgz"],
embed[type="image"][alt$=".pdf"],
object[type="image"][alt$=".pdf"],
embed[type="image"][alt$=".doc"],
object[type="image"][alt$=".doc"],
embed[type="image"][alt$=".png"],
object[type="image"][alt$=".png"],
embed[type="image"][alt$=".jpg"],
object[type="image"][alt$=".jpg"],
embed[type="image"][alt$=".gif"],
object[type="image"][alt$=".gif"],
embed[type="image"][alt$=".mp3"],
object[type="image"][alt$=".mp3"],
embed[type="image"][alt$=".mp4"],
object[type="image"][alt$=".mp4"],
embed[type="image"][alt$=".mov"],
object[type="image"][alt$=".mov"],
embed[type="image"][alt$=".ogg"],
object[type="image"][alt$=".ogg"],
embed[type="image"][alt$=".xls"],
object[type="image"][alt$=".xls"],
embed[type="image"][alt$=".txt"],
object[type="image"][alt$=".txt"],
embed[type="image"][alt$=".zip"],
object[type="image"][alt$=".zip"],
embed[type="image"][alt$=".rar"],
object[type="image"][alt$=".rar"],
embed[type="image"][alt$=".docx"],
object[type="image"][alt$=".docx"],
embed[type="image"][alt$=".webp"],
object[type="image"][alt$=".webp"],
embed[type="image"][alt$=".apng"],
object[type="image"][alt$=".apng"],
embed[type="image"][alt$=".svg"],
object[type="image"][alt$=".svg"],
embed[type="image"][alt$=".svgz"],
object[type="image"][alt$=".svgz"]
```

##Test
```html_example
<img alt="static/ffoodd.png" src="static/ffoodd.png" width="144" height="144" /><span>†</span>
```
*/
$alt: ();
$self-alt: ();

@each $format in $formats {
  $alt: append($alt, unquote('img[alt$=".#{$format}"], area[alt$=".#{$format}"], input[type="image"][alt$=".#{$format}"]'), 'comma');
  $self-alt: append($self-alt, unquote('embed[type="image"][alt$=".#{$format}"], object[type="image"][alt$=".#{$format}"]'), 'comma');
}

#{$alt} {
  @include warning('filename-alt', $self-closing: true);
}

#{$self-alt} {
  @include warning('filename-alt');
}


/*doc
---
title: "atrybut [style]"
name: a05-style-attr
category: Ostrzeżenia
---

##Opis
Twoje style powinny być sterowane przez plik CSS. To wszystko.
I nie, JS nie powinien manipulować stylami: lepiej jest bawić się klasami, na przykład.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-10-1->
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-sequence>

##Selektor
```css_example
[style]
```

##Test
```html_example
<div style="color: red;">Jestem czerwony. Naprawdę czuję się brudny.</div>
```
*/
[style] {
  @include warning('style-attr');

  @include void-tags {
    @include warning('style-attr', $self-closing: true);
  }
}


/*doc
---
title: "[autoplay] prawdopodobnie nie powinnno być używane"
name: a06-autoplay
category: Ostrzeżenia
---

##Opis
Media oparte na czasie, takie jak `<audio>` lub `<video>`  nie powinny być odtwarzane automatycznie , bo może to być dość zaskakujące dla użytkownika.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-4-18>
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-13-17>
* <https://www.w3.org/TR/WCAG20/#visual-audio-contrast-dis-audio>
* <https://www.punkchip.com/autoplay-is-bad-for-all-users/>

##Selektor
```css_example
video[autoplay],
audio[autoplay]
```

##Test
```html_example
<video autoplay controls src=""></video><span>†</span>
```
*/
video[autoplay],
audio[autoplay] {
  @include warning('autoplay', $self-closing: true);
}

/*doc
---
title: "Brak [aria-level]"
name: a07-no-aria-level
category: Ostrzeżenia
---

##Opis
Chociaż `[aria-level]` nie jest wymagany przez specyfikację ARIA, w rzeczywistości lepiej jest go podać.

##Bibliografia
* <https://www.w3.org/TR/wai-aria/states_and_properties#aria-level>
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-9-1>
* <https://github.com/DISIC/rgaa_methodologie/blob/master/Check-css/check-heading.css>
* <https://www.w3.org/TR/wai-aria/roles#heading>
* <https://www.w3.org/TR/WCAG-TECHS/ARIA12.html>
* <https://www.w3.org/TR/WCAG-TECHS/G141.html>
* <https://www.w3.org/TR/WCAG-TECHS/H42.html>

##Selektor
```css_example
[role="heading"]:not([aria-level])
```

##Test
```html_example
<strong role="heading">Nagłówek z nieokreślonym poziomem</strong>
```
*/
[role="heading"]:not([aria-level]) {
  @include warning('no-aria-level');
}


/*doc
---
title: "Brak nagłówka w tabeli danych"
name: a08-missing-thead
category: Ostrzeżenia
---

##Opis
`<thead>` jest bardzo potrzebny, jeśli istnieje `<tbody>`.

##Selektor
```css_example
table:not([role="presentation"]) > caption + tbody,
table:not([role="presentation"]) > tbody:first-child
```

##Test
```html_example
<table>
  <caption>Brakujący thead</caption>
  <tbody>
    <tr>
      <td>Jestem tabelą bez thead.</td>
      <td>Jestem tabelą bez thead.</td>
    </tr>
    <tr>
      <td>Jestem tabelą bez thead.</td>
      <td>Jestem tabelą bez thead.</td>
    </tr>
  </tbody>
</table>
```
*/
table:not([role="presentation"]) > caption + tbody,
table:not([role="presentation"]) > tbody:first-child {
  @include warning('missing-thead');
}


/*doc
---
title: "[controls] byłoby pomocne"
name: a09-controls
category: Ostrzeżenia
---

##Opis
Media oparte na czasie, takie jak `<audio>` lub `<video>` będzie łatwiejsze w użyciu, jeśli `[controls]` są aktywowane dla użytkownika.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-4-20>
* <https://www.w3.org/TR/WCAG20/#media-equiv-audio-desc>
* <https://www.w3.org/TR/WCAG20/#keyboard-operation-keyboard-operable>
* <https://www.w3.org/TR/WCAG20/#keyboard-operation-trapping>
* <https://www.w3.org/TR/WCAG-TECHS/G4.html>

##Selektor
```css_example
video:not([controls]),
audio:not([controls])
```

##Test
```html_example
<video src=""></video><span>†</span>
```
*/
video:not([controls]),
audio:not([controls]) {
  @include warning('controls', $self-closing: true);
}

/*doc
---
title: "Do układu można użyć tabeli jednowierszowej"
name: a10-table-layout
category: Ostrzeżenia
---

##Opis
Samotny `<tr>` może być symptomem tabeli używanej do układu.
Należy to sprawdzić dwukrotnie!


##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-5-3>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-sequence>

##Selektor
```css_example
table:not([role="presentation"]) > tr:only-child,
table:not([role="presentation"]) > tbody > tr:only-child
```

##Test
```html_example
<table>
  <caption>Jestem podpisem :3</caption>
  <thead>
    <tr>
      <th scope="col">O rany…</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Jestem biednym samotnym rzęęęędem tabeli!</td>
    </tr>
  </tbody>
</table>
```
*/
table:not([role="presentation"]) > tr:only-child,
table:not([role="presentation"]) > tbody > tr:only-child {
  @include warning('table-layout');
}



/*doc
---
title: "figcaption poza figure"
name: a11-invalid-figcaption-nesting
category: Ostrzeżenia
---

##Opis
`<figcaption>` nie ma sensu poza `<figure>`.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-8-2>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-parses>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <https://www.w3.org/TR/html52/grouping-content.html#the-figcaption-element>

##Selektor
```css_example
:not(figure) > figcaption
```

##Test
```html_example
<figcaption>Podpisuję coś pod tym czymś, czy nie?</figcaption>
```
*/
:not(figure) > figcaption {
  @include warning('invalid-figcaption-nesting');
}


/*doc
---
title: "figure bez roli group"
name: a12-figure-role
category: Ostrzeżenia
---

##Opis
`<figure>` potrzebuje atrybutu ARIA `[role="group"]` ze względu na dostępność.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-1-10>
* <https://www.w3.org/WAI/tutorials/images/groups/>
* <https://www.w3.org/TR/html52/grouping-content.html#the-figure-element>

##Selektor
```css_example
figure:not([role="group"])
```

##Test
```html_example
<figure>
  <img src="static/ffoodd.png" width="144" height="144" alt="Test figcaption"/>
  <figcaption>&nbsp;Jestem figcaption (podpis figure)</figcaption>
</figure>
```
*/
figure:not([role="group"]) {
  @include warning('figure-role');
}

/*doc
---
title: "JS [href]"
name: a13-href-js
category: Ostrzeżenia
---

##Opis
Atrybut `[href]`  nie powinien zaczynać się od "javascript". Prawdopodobnie powinien to być `<button>` lub przynajmniej element z `[role="button"]`, nie sądzisz?
Jedynym wyjątkiem powinny być skryptozakładki.

##Bibliografia
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L165>

##Selektor
```css_example
a[href^="javascript"]:not([role="button"])
```

##Test
```html_example
<a href="javascript:(function(){a11ycss=document.createElement('LINK');a11ycss.href='https://rawgit.com/ffoodd/a11y.css/master/css/a11y-en.css';a11ycss.rel='stylesheet';a11ycss.media='all';document.body.appendChild(a11ycss);})();">Proszę użyć mojej zakładki ;)</a>
```
*/
a[href^="javascript"]:not([role="button"]) {
  @include warning('href-js');
}



/*doc
---
title: "Każda tabela danych musi mieć podpis"
name: a14-table-caption
category: Ostrzeżenia
---

##Opis
`<caption>` jest potrzebny dla `<table>` z  danymi.
I to musi być `:first-child`, tak przy okazji.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-5-4>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <https://www.w3.org/TR/html5/tabular-data.html#the-caption-element>
* <https://www.w3.org/TR/WCAG-TECHS/H39.html>
* <https://github.com/imbrianj/debugCSS/blob/e04b489388870dd214aa1c1c1a07f6811210c8ef/debugCSS.css#L309>

##Selektor
```css_example
table:not([role="presentation"]) > caption:not(:first-child),
table:not([role="presentation"]) > *:first-child:not(caption)
```

##Test
```html_example
<table>
  <thead>
    <tr>
      <th id="th-one">Jestem tabelą bez podpisu (tytułu)!</th>
      <th id="th-two">Jestem tabelą bez podpisu (tytułu)!</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td colspan="2" headers="th-one th-two">Jestem tabelą bez podpisu (tytułu)!</td>
    </tr>
    <tr>
      <td colspan="2" headers="th-one th-two">Jestem tabelą bez podpisu (tytułu)!</td>
    </tr>
  </tbody>
</table>
```
*/
table:not([role="presentation"]) > caption:not(:first-child),
table:not([role="presentation"]) > *:first-child:not(caption) {
  @include warning('table-caption');
}

/*doc
---
title: "label bez atrybutu [for]"
name: a15-no-for
category: Ostrzeżenia
---

##Opis
Znacznik `<label>` coś etykietuje, w teorii.
Chociaż domyślne etykietowanie kontrolek formularzy jest akceptowane, prawdopodobnie lepiej jest dwukrotnie sprawdzić, czy kontrolka formularza jest *naprawdę* zagnieżdżona w swojej `<label>`.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa-accessibilite/criteres.html#test-11-1-2>
* <https://github.com/DISIC/rgaa_referentiel_en/blob/44e2bee0c710e37ca49901b1e6b8fae9b553fd5d/criteria.html#L3981>
* <https://www.w3.org/TR/WCAG-TECHS/H44.html>
* <https://www.w3.org/WAI/tutorials/forms/labels/>
* <https://make.wordpress.org/accessibility/2017/01/16/testing-form-functionality-with-different-assistive-technology/>
* <https://www.w3.org/TR/WCAG20/#minimize-error-cues>
* <https://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>

##Selektor
```css_example
label:not([for])
```

##Test
```html_example
<label>Zgadnij co?</label>
```
*/
label:not([for]) {
  @include warning('no-for');
}


/*doc
---
title: "legend w fieldset musi być :first-child"
name: a16-fieldset
category: Ostrzeżenia
---

##Opis
`<legend>`  w elemencie `<fieldset>` musi być pierwszym dzieckiem `:first-child`.
Zawsze.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-11-6>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <https://www.w3.org/TR/WCAG20/#minimize-error-cues>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L218>

##Selektor
```css_example
fieldset > *:not(legend):first-child,
fieldset > legend:not(:first-child)
```

##Test
```html_example
<fieldset>
  <label>Nie jestem legendą.</label>
</fieldset>
```
*/
fieldset > *:not(legend):first-child,
fieldset > legend:not(:first-child) {
  @include warning('fieldset');
}


/*doc
---
title: "Niepoprawna struktura tabeli"
name: a17-table-structure
category: Ostrzeżenia
---

##Opis
`<thead>`, `<tfoot>` oraz `<tbody>` muszą występować w tej kolejności.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-8-2>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-parses>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <https://github.com/imbrianj/debugCSS/blob/e04b489388870dd214aa1c1c1a07f6811210c8ef/debugCSS.css#L314>

##Selektor
```css_example
table > tfoot ~ thead,
table > tbody ~ tfoot,
table > tbody ~ thead,
table > tfoot ~ colgroup,
table > tbody ~ colgroup,
table > tbody ~ colgroup
```

##Test
```html_example
<table>
  <caption>Jestem podpisem</caption>
  <thead>
    <tr>
      <th scope="col">Gdzie jest moja stopka?</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Jestem tabelą ze źle zrobioną stopką.</td>
      <td>Jestem tabelą ze źle zrobioną stopką.</td>
    </tr>
    <tr>
      <td>Jestem tabelą ze źle zrobioną stopką.</td>
      <td>Jestem tabelą ze źle zrobioną stopką.</td>
    </tr>
  </tbody>
  <tfoot>
    <th id="th-1">Jestem tabelą ze źle zrobioną stopką.</th>
    <th id="th-2">Jestem tabelą ze źle zrobioną stopką.</th>
  </tfoot>
</table>
```
*/
table > tfoot ~ thead,
table > tbody ~ tfoot,
table > tbody ~ thead,
table > tfoot ~ colgroup,
table > tbody ~ colgroup,
table > tbody ~ colgroup {
  @include warning('table-structure');
}


/*doc
---
title: "Niepoprawne rodzeństwo na liście definicji"
name: a18-invalid-def
category: Ostrzeżenia
---

##Opis
`<dt>` i `<dd>` powinny być bezpośrednio sąsiadującym rodzeństwem, i nic więcej. Chociaż wiele `<dd>` może nastąpić za pojedynczym `<dt>`.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-8-2>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-parses>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L312>
* <https://www.w3.org/TR/html5/grouping-content.html#the-dl-element>

##Selektor
```css_example
dt + :not(dd),
:not(dt):not(dd) + dd
```

##Test
```html_example
<dl>
  <dt>Potrzebna mi definicja, nie sądzisz?</dt>
  <li>A ja jestem pozycją na liście&hellip;</li>
</dl>
```
*/
dt + :not(dd),
:not(dt):not(dd) + dd {
  @include warning('invalid-def');
}

/*doc
---
title: "Niepoprawne zagnieżdżanie na liście"
name: a19-invalid-list-nesting
category: Ostrzeżenia
---

##Opis
Jedynym dozwolonym dzieckiem w `<ul>` i `<ol>` jest `<li>` - i odwrotnie jest również prawdziwe.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-8-2>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-parses>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L313>
* <https://www.w3.org/TR/html5/grouping-content.html#the-li-element>

##Selektor
```css_example
ul > :not(li),
ol > :not(li),
:not(ul):not(ol) > li
```

##Test
```html_example
<ul>
  <p>Czuję się jakbym się zgubił.</p>
</ul>
```
*/
ul > :not(li),
ol > :not(li),
:not(ul):not(ol) > li {
  @include warning('invalid-list-nesting');
}


/*doc
---
title: "Niepoprawne zagnieżdżanie"
name: a20-invalid-nesting
category: Ostrzeżenia
---

##Opis
Niektóre zagnieżdżenia są zabronione i na razie nie mają swoich własnych przypadków testowych:

* `<main>` zawarte w którymkolwiek z `<nav>`, `<aside>`, `<footer>`, `<header>` lub `<article>`;
* `<address>`  zawarte w którymkolwiek z `<address>`, `<nav>`, `<aside>`, `<section>`, `<footer>`, `<header>` lub `<article>` — ani nagłówkach;
* `<option>` i `<optgroup>` poza `<select>`;
* `<legend>` poza `<fieldset>`;
* `<td>` lub `<th>` poza `<tr>`;
* bezpośrednie dzieci `<table>`;
* `<colgroup>` zawierające cokolwiek innego niż `<col>`.

Może inne nieprawidłowe zagnieżdżenia do przetestowania. Bądź na bieżąco.


##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-8-2>.
* <https://www.w3.org/TR/html52/grouping-content.html#elementdef-main>
* <https://www.w3.org/TR/html52/grouping-content.html#the-address-element>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-parses>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-rsv>

##Selektor
```css_example
nav main,
aside main,
footer main,
header main,
article main,
:not(tr) > td,
:not(tr) > th,
colgroup *:not(col),
:not(colgroup) > col,
tr > :not(td):not(th),
optgroup > :not(option),
:not(select) > optgroup,
:not(fieldset) > legend,
select > :not(option):not(optgroup),
:not(select):not(optgroup) > option,
table > *:not(thead):not(tfoot):not(tbody):not(tr):not(colgroup):not(caption),
address h1,
address h2,
address h3,
address h4,
address h5,
address h6,
address nav,
address aside,
address header,
address footer,
address address,
address article,
address section
```

##Test
```html_example
<legend>Jestem legendą. Czyżby?</legend>
```
*/
nav main,
aside main,
footer main,
header main,
article main,
:not(tr) > td,
:not(tr) > th,
colgroup *:not(col),
:not(colgroup) > col,
tr > :not(td):not(th),
optgroup > :not(option),
:not(select) > optgroup,
:not(fieldset) > legend,
select > :not(option):not(optgroup),
:not(select):not(optgroup) > option,
table > *:not(thead):not(tfoot):not(tbody):not(tr):not(colgroup):not(caption),
address h1,
address h2,
address h3,
address h4,
address h5,
address h6,
address nav,
address aside,
address header,
address footer,
address address,
address article,
address section {
  @include warning('invalid-nesting');
}


/*doc
---
title: "Niepoprawne zagnieżdżanie na liście definicji"
name: a21-invalid-def-nesting
category: Ostrzeżenia
---

##Opis
`<div>`, `<dt>` i `<dd>` powinny być bezpośrednimi dziećmi `<dl>`.
Każda inna konstrukcja może być gdzieś naruszeniem.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-8-2>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-parses>
* <https://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L318>
* <https://www.w3.org/TR/html5/grouping-content.html#the-dl-element>
* <https://www.w3.org/TR/html52/grouping-content.html#elementdef-dl>

##Selektor
```css_example
:not(dl) > dt,
:not(dl) > dd,
dl > :not(dt):not(dd):not(div)
```

##Test
```html_example
<dl>
  <li>Jestem pozycją na liście.</li>
</dl>
```
*/
:not(dl) > dt,
:not(dl) > dd,
dl > :not(dt):not(dd):not(div) {
  @include warning('invalid-def-nesting');
}

/*doc
---
title: "Nieprawidłowo użyte znaczniki sekcji"
name: a22-sectioning-tags
category: Ostrzeżenia
---

##Opis
`<section>`, `<aside>`, `<article>` to znaczniki sekcji.
Nie wolno ich używać jako opakowania!

##Bibliografia
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L252>
* <https://www.w3.org/TR/html5/dom.html#sectioning-content>

##Selektor
```css_example
aside > aside:first-child,
article > aside:first-child,
aside > article:first-child,
aside > section:first-child,
section > section:first-child,
article > section:first-child,
article > article:first-child
```

##Test
```html_example
<aside>
  <section>Jestem opakowany, wiesz.</section>
</aside>
```
*/
aside > aside:first-child,
article > aside:first-child,
aside > article:first-child,
aside > section:first-child,
section > section:first-child,
article > section:first-child,
article > article:first-child {
  @include warning('sectioning-tags');
}

/*doc
---
title: "Niespójne [dir] i [lang]"
name: a23-mismatched-dir
category: Ostrzeżenia
---

##Opis
Niektóre języki - jak arabski czy hebrajski - wymagają przełączenia kierunku tekstu za pomocą `[dir="rtl"]`, ponieważ domyślnym kierunkiem tekstu jest od lewej do prawej. Wymaga to również sprawdzenia każdej zmiany języka strony (oznaczonej za pomocą `[lang]`) w arabskiej lub hebrajskiej treści, aby zdefiniować również `[dir]`.

##Bibliografia
* <https://alphagov.github.io/accessibility-tool-audit/test-cases.html#languageofcontent>
* <https://www.w3.org/International/questions/qa-html-dir>
* <https://www.w3.org/International/articles/inline-bidi-markup/#dirattribute>
* <https://w3c.github.io/html/dom.html#the-dir-attribute>

##Selektor
```css_example
[lang="ar"]:not([dir="rtl"]),
[lang="he"]:not([dir="rtl"]),
[lang="ar"] [lang]:not([dir="ltr"]),
[lang="he"] [lang]:not([dir="ltr"]),
[dir="rtl"]:not([lang="ar"]):not([lang="he"])
```

##Test
```html_example
<p dir="rtl" lang="pl">Cóż, jestem trochę zdezorientowany…</p>
```
*/
[lang="ar"]:not([dir="rtl"]),
[lang="he"]:not([dir="rtl"]),
[lang="ar"] [lang]:not([dir="ltr"]),
[lang="he"] [lang]:not([dir="ltr"]),
[dir="rtl"]:not([lang="ar"]):not([lang="he"]) {
  @include warning('mismatched-dir');
}


/*doc
---
title: "Niewłaściwie umieszczony div"
name: a24-misplaced-div
category: Ostrzeżenia
---

##Opis
Czy wiesz, że nie powinieneś dodawać `<div>`  wewnątrz jakiegokolwiek elementu liniowego? Zamiast tego możesz użyć `<span>`.

##Bibliografia
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L326>

##Selektor
```css_example
b div,
i div,
q div,
em div,
abbr div,
cite div,
code div,
span div,
small div,
label div,
strong div
```

##Test
```html_example
<b><div>Hej ha!</div></b>
```
*/
b div,
i div,
q div,
em div,
abbr div,
cite div,
code div,
span div,
small div,
label div,
strong div {
  @include warning('misplaced-div');
}

/*doc
---
title: "Niezabezpieczone [target=_blank]"
name: a25-unsecured-target
category: Ostrzeżenia
---

##Opis
Łącza `[target="_blank"]` mogą być wykorzystywane do wyłudzania informacji.
Właściwie nie jest to problem związany z dostępnością, ale wszystko co pomaga użytkownikom jest mile widziane.


##Bibliografia*
* <https://mathiasbynens.github.io/rel-noopener/>
* <https://html.spec.whatwg.org/multipage/semantics.html#link-type-noopener>
* <https://html.spec.whatwg.org/multipage/semantics.html#link-type-noreferrer>
* <https://dev.to/ben/the-targetblank-vulnerability-by-example>
* <https://twitter.com/HugoGiraudel/status/801475801397030912>

##Selektor
```css_example
[target$="blank"]:not([rel]),
[target$="blank"]:not([rel*="noopener"]),
[target$="blank"]:not([rel*="noreferrer"])
```

##Test
```html_example
<a href="/" target="_blank">Czuję się bezbronna...</a>
```
*/
[target$="blank"]:not([rel]),
[target$="blank"]:not([rel*="noopener"]),
[target$="blank"]:not([rel*="noreferrer"]) {
  @include warning('unsecured-target');
}


/*doc
---
title: "Obraz dekoracyjny nie powinien mieć dostępnej nazwy"
name: a26-decoration
category: Ostrzeżenia
---

##Opis
Żaden ozdobny obraz - z `[aria-hidden="true"]` lub pustym `[alt]` — nie powinien mieć żadnego z tych elementów:

* `[title]`;
* `[aria-label]`;
* `[aria-labelledby]`;
* `[aria-describedby]`;
* potomne `<title>`;
* lub potomne `<desc>`.

Ten test obecnie nie może sprawdzić czy istnieje jakiekolwiek dziecko `<title>` lub `<desc>`, ponieważ `<svg>` jest wymienionym (???) elementem.

Zobacz [Przypadki skrajne i znane problemy](https://github.com/ffoodd/a11y.css/wiki/Edge-cases-and-known-issues) na wiki a11y.css'.

##Bibliografia
* BP160 OpQuast
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-1-2>
* <https://www.accede-web.com/notices/html-css-javascript/6-images-icones/6-3-balise-img/#ancre-01>
* <https://www.w3.org/WAI/tutorials/images/decision-tree/>
* <https://www.w3.org/TR/wai-aria/roles#presentation>
* <https://www.w3.org/TR/html51/semantics.html#alt>
* <https://www.w3.org/TR/2008/REC-WCAG20-20081211/#text-equiv-all>
* <https://www.w3.org/TR/WCAG-TECHS/H67.html>
* <https://www.w3.org/TR/WCAG-TECHS/F39.html>
* <https://www.w3.org/TR/WCAG-TECHS/F38.html>
* <https://www.w3.org/TR/WCAG-TECHS/F65.html>

##Selektor
```css_example
img[alt=""][title],
img[alt=""][aria-label],
img[alt=""][aria-labelledby],
img[alt=""][aria-describedby],
area:not([href])[alt]:not([alt=""]),
area:not([href])[alt=""][title],
area:not([href])[alt=""][aria-label],
area:not([href])[alt=""][aria-labelledby],
area:not([href])[alt=""][aria-describedby],
svg[aria-hidden="true"][title],
svg[aria-hidden="true"][aria-label],
svg[aria-hidden="true"][aria-labelledby],
svg[aria-hidden="true"][aria-describedby],
canvas[aria-hidden="true"][title],
canvas[aria-hidden="true"][aria-label],
canvas[aria-hidden="true"][aria-labelledby],
canvas[aria-hidden="true"][aria-describedby],
embed[type="image"][aria-hidden="true"][title],
embed[type="image"][aria-hidden="true"][aria-label],
embed[type="image"][aria-hidden="true"][aria-labelledby],
embed[type="image"][aria-hidden="true"][aria-describedby],
object[type="image"][aria-hidden="true"][title],
object[type="image"][aria-hidden="true"][aria-label],
object[type="image"][aria-hidden="true"][aria-labelledby],
object[type="image"][aria-hidden="true"][aria-describedby],
```

##Test
```html_example
<svg width="12cm" height="4cm" viewBox="0 0 1200 400"
     xmlns="https://www.w3.org/2000/svg" version="1.1"
     aria-hidden="true" title="Decorative SVG, you punk!">
  <rect x="400" y="100" width="400" height="200"
        fill="forestgreen" stroke="darkgreen" stroke-width="10"  />
</svg><span>†</span>
```
*/
img[alt=""][title],
img[alt=""][aria-label],
img[alt=""][aria-labelledby],
img[alt=""][aria-describedby],
area:not([href])[alt]:not([alt=""]),
area:not([href])[alt=""][title],
area:not([href])[alt=""][aria-label],
area:not([href])[alt=""][aria-labelledby],
area:not([href])[alt=""][aria-describedby],
svg[aria-hidden="true"][title],
svg[aria-hidden="true"][aria-label],
svg[aria-hidden="true"][aria-labelledby],
svg[aria-hidden="true"][aria-describedby],
embed[type="image"][aria-hidden="true"][title],
embed[type="image"][aria-hidden="true"][aria-label],
embed[type="image"][aria-hidden="true"][aria-labelledby],
embed[type="image"][aria-hidden="true"][aria-describedby], {
  @include warning('decoration', $self-closing: true);
}

canvas[aria-hidden="true"][title],
canvas[aria-hidden="true"][aria-label],
canvas[aria-hidden="true"][aria-labelledby],
canvas[aria-hidden="true"][aria-describedby],
object[type="image"][aria-hidden="true"][title],
object[type="image"][aria-hidden="true"][aria-label],
object[type="image"][aria-hidden="true"][aria-labelledby],
object[type="image"][aria-hidden="true"][aria-describedby] {
  @include warning('decoration');
}

/*doc
---
title: "Rola jest wymagana dla svg"
name: a27-no-aria-role
category: Ostrzeżenia
---

##Opis
Każdy `<svg>` powinien mieć albo `[aria-hidden="true"]`, jeśli ma charakter dekoracyjny, albo `[role="img"]`, jeśli ma charakter informacyjny.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-1-2>
* <https://www.w3.org/TR/2008/REC-WCAG20-20081211/#text-equiv-all>
* <https://www.w3.org/TR/WCAG-TECHS/F65.html>

##Selektor
```css_example
svg:not([aria-hidden="true"]):not([role="img"])
```

##Test
```html_example
<svg width="12cm" height="4cm" viewBox="0 0 1200 400"
     xmlns="https://www.w3.org/2000/svg" version="1.1"
     aria-label="Dekoracyjny SVG, ty punku!">
  <rect x="400" y="100" width="400" height="200"
        fill="forestgreen" stroke="darkgreen" stroke-width="10"  />
</svg><span>†</span>
```
*/
svg:not([aria-hidden="true"]):not([role="img"]) {
  @include warning('no-aria-role', $self-closing: true);
}



/*doc
---
title: "[role=presentation] nie powinna być używana dla obrazu"
name: a28presentation
category: Ostrzeżenia
---

##Opis
Każdy obraz dekoracyjny powinien być oznaczony `[aria-hidden="true"]` (lub pustym `[alt]`, jeśli to element`<img>`).
`[role=presentation]` spowinno załatwić sprawę, ale w momencie pisania tego tekstu, jego wsparcie jest zbyt niskie w porównaniu do pustego `[alt]` lub `[aria-hidden=true]`.

##Bibliografia
* <https://references.modernisation.gouv.fr/referentiel/notes-techniques.html#nt-1-2>
* <https://www.w3.org/WAI/tutorials/images/decorative/>


##Selektor
```css_example
img[role="presentation"],
svg[role="presentation"],
area[role="presentation"],
embed[role="presentation"],
canvas[role="presentation"],
object[role="presentation"]
```

##Test
```html_example
<svg width="12cm" height="4cm" viewBox="0 0 1200 400"
     xmlns="https://www.w3.org/2000/svg" version="1.1"
     role="presentation">
  <rect x="400" y="100" width="400" height="200"
        fill="forestgreen" stroke="darkgreen" stroke-width="10"  />
</svg><span>†</span>
```
*/
img[role="presentation"],
svg[role="presentation"],
area[role="presentation"],
embed[role="presentation"] {
  @include warning('presentation', $self-closing: true);
}

canvas[role="presentation"],
object[role="presentation"] {
  @include warning('presentation');
}



/*doc
---
title: "summary w details musi być :first-child"
name: a29details
category: Ostrzeżenia
---

##Opis
`<summary>` w elemencie `<details>` musi być pierwszym dzieckiem (`:first-child`). Zawsze.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-11-6>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <https://www.w3.org/TR/WCAG20/#minimize-error-cues>
* <https://www.w3.org/TR/html52/interactive-elements.html#elementdef-summary>
* <https://www.w3.org/TR/html52/interactive-elements.html#elementdef-details>

##Selektor
```css_example
details > *:not(summary):first-child,
details > summary:not(:first-child)
```

##Test
```html_example
<details>
  <legend>Nie jestem podsumowaniem.</legend>
</details>
```
*/
details > *:not(summary):first-child,
details > summary:not(:first-child) {
  @include warning('details');
}

/*doc
---
title: "th bez [scope] lub [id]"
name: a30-th-no-scope
category: Ostrzeżenia
---

##Opis
`<th>` usilnie potrzebuje `[id]` lub `[scope]`.

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-5-7>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <https://www.w3.org/TR/WCAG20-TECHS/H43.html>

##Selektor
```css_example
th:not([scope]):not([id])
```

##Test
```html_example
<table>
  <caption>Potrzebne [scope] lub [id]</caption>
  <thead>
    <tr>
      <th>Jestem bez [scope] lub [id].</th>
      <th scope="col">jestem th ze [scope].</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Jestem td i czegoś mi brakuje.</td>
      <td>Jestem td i czegoś mi brakuje.</td>
    </tr>
    <tr>
      <td>Jestem td i czuje się dobrze.</td>
      <td>Jestem td i czuje się dobrze</td>
    </tr>
  </tbody>
</table>
```
*/
th:not([scope]):not([id]) {
  @include warning('th-no-scope');
}


/*doc
---
title: "Użyto spacer.gif"
name: a31-spacer-gif
category: Ostrzeżenia
---

##Opis
Uwierz mi, to jeszcze musi zostać przetestowane.

##Bibliografia
* <https://www.la-grange.net/2015/03/11/visible>

##Selektor
```css_example
img[src*="1px.gif"]:not([role="presentation"]),
img[src*="1x1.gif"]:not([role="presentation"]),
img[src*="clear.gif"]:not([role="presentation"]),
img[src*="spacer.gif"]:not([role="presentation"]),
img[src*="dotclear.gif"]:not([role="presentation"]),
img[src*="transparent.gif"]:not([role="presentation"]),
img[src*="pixel-1x1-clear.gif"]:not([role="presentation"])
```

##Test
```html_example
<img src="static/spacer.gif" alt="spacer.gif" width="100" height="100"/><span>†</span>
```
*/
img[src*="1px.gif"]:not([role="presentation"]),
img[src*="1x1.gif"]:not([role="presentation"]),
img[src*="clear.gif"]:not([role="presentation"]),
img[src*="spacer.gif"]:not([role="presentation"]),
img[src*="dotclear.gif"]:not([role="presentation"]),
img[src*="transparent.gif"]:not([role="presentation"]),
img[src*="pixel-1x1-clear.gif"]:not([role="presentation"]) {
  @include warning('spacer-gif', $self-closing: true);
}



/*doc
---
title: "Większość węzłów DOM nie może być :empty"
name: a32-empty-nodes
category: Ostrzeżenia
---

##Opis
Oczywiście elementy void są puste, tak samo jak `<iframe>` i `<textarea>` mogą być `:empty` (puste).
Każdy inny znacznik `:empty`, który nie jest ukryty, jest prawdopodobnie bezużyteczny i powinien zostać usunięty.

Zauważ, że nie dotyczy to znaczników posiadających źródło wskazane w `[src]`. Jest to raczej opinia, ale ma na celu uniknięcie fałszywych alarmów w odniesieniu do takich znaczników jak `<video>` lub `<audio>`, które mogą być puste, jeśli mają co najmniej jedno źródło określone przez `[src]`.

###Notes

* Ten test dotyczy tylko znaczników w `<body>`, ponieważ większość znaczników w head powinna być pusta.
* `<button>` oraz `<a>` oraz również wyłączone, ponieważ `button:empty` oraz `a:empty` są objęte ich własnym błędem.

Moglibyśmy użyć pseudo-klasy `:blank`, ale w tym momencie jej wsparcie jest bardzo słabe. Moglibyśmy również użyć pseudoklasy `:-moz-only-whitespace` pseudo-class, ale jej wsparcie jest ograniczone do Firefoxa i w ten sposób moglibyśmy unieważnić nasz stos selektorów…

##Bibliografia
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L243>
* <https://www.w3.org/TR/html-markup/syntax.html#void-element>
* <https://drafts.csswg.org/selectors-4/#the-blank-pseudo>
* <https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-only-whitespace>
* <https://css-tricks.com/almanac/selectors/b/blank/>

##Selektor
```css_example
body *:empty:not([hidden]):not([aria-hidden]):not([src]):not(button):not(a):not(iframe):not(textarea):not(area):not(base):not(br):not(col):not(command):not(embed):not(hr):not(img):not(input):not(keygen):not(link):not(meta):not(param):not(source):not(track):not(wbr):not(title)
```

##Test
```html_example
<p id="empty-node_code"></p>
```
*/
/**
 * 1. An empty tag without dimensions isn't hoverable :/
 * @note Won't do anything for inline elements.
 */
body *:empty:not([hidden]):not([aria-hidden]):not([src]):not(button):not(a):not(iframe):not(textarea):not(area):not(base):not(br):not(col):not(command):not(embed):not(hr):not(img):not(input):not(keygen):not(link):not(meta):not(param):not(source):not(track):not(wbr):not(title) {
  @include warning('empty-nodes');
  /* 1 */
  min-height: 1px;
  min-width: 1px;
}

svg *:empty:not(title):not(desc):not([hidden]):not([aria-hidden]):not([src]):not(button):not(a):not(iframe):not(textarea):not(area):not(base):not(br):not(col):not(command):not(embed):not(hr):not(img):not(input):not(keygen):not(link):not(meta):not(param):not(source):not(track):not(wbr) {
  @extend %a11y-reset;
}


/*doc
---
title: "Zagnieżdżone tabele"
name: a33-nested-table
category: Ostrzeżenia
---

##Opis
Nie ma dobrego powodu, aby zagnieżdżać tabele danych: więc prawdopodobnie oznacza to, że mamy do czynienia z tabelą układu…

##Bibliografia
* <https://references.modernisation.gouv.fr/rgaa/criteres.html#crit-5-3>
* <https://www.w3.org/TR/WCAG20/#content-structure-separation-sequence>
* <https://www.w3.org/WAI/tutorials/tables/tips/>
* <https://github.com/karlgroves/diagnostic.css/blob/39ede15ff46bd59af9f8f30efb04cbb45b6c1ba5/diagnostic.css#L175>

##Selektor
```css_example
table table
```

##Test
```html_example
<table>
  <caption>Jestem podpisem :3</caption>
  <thead>
    <tr>
      <th scope="col">O rany…</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Jestem komórką tabeli!</td>
    </tr>
    <tr>
      <td>
        <table>
          <caption>Jestem komórką tabeli!</caption>
          <thead>
            <tr>
              <th scope="col">O rany…</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Jestem komórką tabeli!</td>
            </tr>
            <tr>
              <td>Jestem komórką tabeli!</td>
            </tr>
        </table>
      </td>
    </tr>
  </tbody>
</table>
```
*/
table table {
  @include warning('nested-table');
}


/*doc
---
title: "Zła wyliczona wartość"
name: a34-oops
category: Ostrzeżenia
---

##Opis
Nie śmiej się, gówno się stało.

##Selektor
```css_example
[id*="NaN"],
[id*="null"],
[class*="NaN"],
[class*="null"],
[id*="undefined"],
[class*="undefined"]
```

##Test
```html_example
<p class="undefined">Oops, coś poszło nie tak.</p>
```
*/
[class*="NaN"],
[class*="null"],
[class*="undefined"] {
  @include warning('undefined-class');

  @include void-tags {
    @include warning('undefined-class', $self-closing: true);
  }
}

[id*="NaN"],
[id*="null"],
[id*="undefined"] {
  @include warning('undefined-id');

  @include void-tags {
    @include warning('undefined-id', $self-closing: true);
  }
}
